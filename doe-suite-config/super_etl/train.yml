---


$SUITE_ID$:
  train_3pc: 1705937567
  train_3pc_wan: 1705939961

  train_3pc_bert: 1717166233
  train_3pc_bert_wan: 1717160273

$ETL$:
  raw:
    experiments:
      train_3pc: "*"
    extractors:
      $INCLUDE_STEPS$: [{config: train, pipeline: compare_relatedwork_linear}]
    transformers: []
    loaders:
      PickleSummaryLoader: {}


  compare_relatedwork_linear:
    experiments:
      train_3pc: "*"
      train_3pc_wan: "*"
      train_3pc_bert: "*"
      train_3pc_bert_wan: "*"

    extractors:
      MpSpdzResultExtractor: { }
      MpSpdzStderrExtractor:
        file_regex:
          - ^stderr\.log$
          - ^cerebro_input_stderr\.log$
          - ^cerebro_output_stderr\.log$
          - ^sha3_input_stderr\.log$
          - ^sha3_output_stderr\.log$
      ConsistencyExtractor: { }
      IgnoreExtractor:
        file_regex:
          - ^stdout\.log$
          - ^cerebro_input_stdout\.log$
          - ^cerebro_output_stdout\.log$
          - ^sha3_input_stdout\.log$
          - ^sha3_output_stdout\.log$
    transformers:
      - df.replace: { to_replace: "^adult_[a-zA-Z0-9]*", value: "adult", regex: True }
      - df.replace: { to_replace: "^mnist_full_[a-zA-Z0-9]*", value: "mnist_full", regex: True }
      - df.replace: { to_replace: "^cifar_alexnet_[a-zA-Z0-9]*", value: "cifar_alexnet", regex: True }
      - df.replace: { to_replace: "^glue-qnli", value: "glue_qnli_bert", regex: True }

      - name: MPCTypeFixTransformer

      - name: TimerBandwidthAggregator
      - name: ComputationMultiplierTransformer

      - name: CerebroMultiplierTransformer
      - name: Sha3MultiplierTransformer

      - name: StatTransformer
        groupby_columns: [ suite_name, exp_name, run, host_idx, 'mpc.script_name', 'mpc.domain', 'mpc.script_args.dataset', 'mpc_type', 'network_type', 'consistency_args.type' ]
        stats:
          mpc_time_s: [ "spdz_timer_99", "spdz_timer_1102" ]

          auditing_overhead_s: [ "consistency_convert_shares_share_switch_output_mus",
                                 "consistency_poly_commit_commit_mus",
                                 "consistency_poly_commit_sign_mus",
                                 "consistency_poly_commit_sign_sk_mus",
                                 "consistency_convert_shares_share_switch_input_mus",
                                 "consistency_poly_eval_poly_eval_mus",
                                 "consistency_prove_verify_Prove Verify_mus",

                                 "spdz_timer_98",
                                 "spdz_timer_97",

                                 "cerebro_input_spdz_timer_95",
                                 "cerebro_output_spdz_timer_95",
                                 "consistency_cerebro_verify_Exponentiate_mus",

                                 "sha3_input_spdz_timer_98",
                                 "sha3_output_spdz_timer_97",
          ]

          auditing_overhead_bytes: [ "consistency_convert_shares_share_switch_output_global_bytes",
                                     "consistency_poly_commit_commit_global_bytes",
                                     "consistency_poly_commit_sign_global_bytes",
                                     "consistency_poly_commit_sign_sk_global_bytes",
                                     "consistency_convert_shares_share_switch_input_global_bytes",
                                     "consistency_poly_eval_poly_eval_global_bytes",
                                     "consistency_prove_verify_global_bytes",

                                     "spdz_timer_bw_98",
                                     "spdz_timer_bw_97",

                                     "cerebro_input_spdz_timer_bw_95",
                                     "cerebro_output_spdz_timer_bw_95",

                                     "sha3_input_spdz_timer_bw_98",
                                     "sha3_output_spdz_timer_bw_97"
          ]

          global_data_sent_bytes: [ "spdz_timer_bw_99", "spdz_timer_bw_1102" ]

          n_rounds: [ "spdz_player_round_number" ]

          share_convert_time_s: [ "consistency_convert_shares_share_switch_output_mus" ]
          share_convert_global_bytes: [ "consistency_convert_shares_share_switch_output_global_bytes" ]

          poly_commit_time_s: [ "consistency_poly_commit_commit_mus" ]
          poly_commit_global_bytes: [ "consistency_poly_commit_commit_global_bytes" ]

          sign_time_s: [ "consistency_poly_commit_sign_mus" ]
          sign_global_bytes: [ "consistency_poly_commit_sign_global_bytes" ]

          sign_sk_time_s: [ "consistency_poly_commit_sign_sk_mus" ]
          sign_sk_global_bytes: [ "consistency_poly_commit_sign_sk_global_bytes" ]
      - name: JoinWithCsvTransformer
        csv_path: storage.csv
        on: [ consistency_args.type, mpc.script_args.dataset ]


    loaders:
      PickleSummaryLoader: { }
      BarPlotLoader:

        subplots:
          rows: ["$metrics$", "network_type"]
          cols: ["mpc.script_args.dataset"]

          share_y: none

        cols_values_filter:
          mpc.script_name: [ 'training' ]
          suite_name: [ train_3pc ]
          'consistency_args.type': ['pc' , 'sha3s', 'cerebro']

          network_type: [ 'lan' ]
          host_idx: [ 0 ]
          mpc_type: [ 'sh', 'mal' ]
          'mpc.script_args.dataset': [ adult] _2party"]
          'mpc.domain': [ 'ring' ]


        plot_cols: [ 'suite_name', 'mpc.script_name', 'host_idx', 'mpc.domain', 'network_type', 'mpc.script_args.dataset' ]

        group_cols: [  'consistency_args.type' ]

        bar_cols: [ 'mpc_type' ]


        group_labels:
          cols: ['consistency_args.type']
          format: "{}"

        show_debug_info: False

        figure_size: [2.5, 1.8]
        bar_width: 1 # 1.2


        legend_fig:
          format: "{} {}"
          cols: [ 'mpc_type', "$bar_part_col$" ]
          kwargs: {loc: "upper center", ncol: 4, bbox_to_anchor: [0.51, 0.075], columnspacing: 3.5,  fancybox: True}


        title:
          format: "{}"
          plot_cols: [ 'mpc.script_args.dataset' ]

        bar_styles:
          - style: {label: ~, edgecolor: black}
            filter: {"consistency_args.type": ["pc"]}
          - style: {color: "#f7e1d3", edgecolor: grey, label: ~}
            filter: { "$bar_part_col$": [storage_train] }
          - style: {color: "#e67e22", edgecolor: grey}
            filter: { "mpc_type": ["sh"], "$bar_part_col$": [mpc_time_s, global_data_sent_bytes] }
          - style: {color: "#f5cba7", edgecolor: grey}
            filter: { "mpc_type": ["sh"], "$bar_part_col$": [auditing_overhead_s, auditing_overhead_bytes] }
          - style: {color: "#8e44ad", edgecolor: grey}
            filter: { "mpc_type": ["mal"], "$bar_part_col$": [mpc_time_s, global_data_sent_bytes] }
          - style: {color: "#d7bde2", edgecolor: grey}
            filter: { "mpc_type": ["mal"], "$bar_part_col$": [auditing_overhead_s, auditing_overhead_bytes] }


        labels:
          mpc_time_s: ""
          global_data_sent_bytes: ""
          auditing_overhead_s: "(Overhead)"
          auditing_overhead_bytes: "(Overhead)"
          n_rounds: ""

          ring: "Ring"
          ring_split: "Ring"
          custom_256: "Field"

          adult: "Adult"
          mnist_full: "MNIST"
          cifar_alexnet: "Cifar10"
          glue_qnli_bert: "QNLI"

          pc: "$\\bf{Ours}$"
          cerebro: "PED"
          sha3: "SHA3"
          sha3s: "SHA3"


          sh: "SH"
          mal: "MAL"

        metrics:
          lan_time_all:
            bar_part_cols: [ mpc_time_s, auditing_overhead_s ]
            y_unit_divider: 60.0
            y_label: "Time [min]"
            y_label_pad: 14
            plot_cols_filter:
              network_type: [ 'lan' ]

            y_lim_row: [ [0, 40], [0, 16000], [0, 1000000]]
            y_lim_dict: [
              { 'selector': { 'suite_name': 'train_3pc', 'mpc.script_name': 'training', 'host_idx': '0', 'mpc.domain': 'ring', 'network_type': 'lan', 'mpc.script_args.dataset': 'adult' }, 'value': [0.0, 40.0] },
]
            n_y_ticks: 5

          wan_bandwidth:
            bar_part_cols: [ global_data_sent_bytes, auditing_overhead_bytes ]
            y_label: "Bandwidth [TB]"
            y_label_pad: 11
            y_unit_multiplicator: 1.0e-12
            plot_cols_filter:
              network_type: [ 'lan' ]



            y_lim_row: [  [0, 1], [0, 1200], [0, 35000] ]
            y_lim_dict: [
              { 'selector': { 'suite_name': 'train_3pc', 'mpc.script_name': 'training', 'host_idx': '0', 'mpc.domain': 'ring', 'network_type': 'lan', 'mpc.script_args.dataset': 'adult' }, 'value': [0.0, 1.0] },
]
            n_y_ticks: 5


          storage:
            bar_part_cols: [ storage_train ]
            y_label: "Storage [Bytes]"

            log_y: True

            plot_cols_filter:
              network_type: [ 'lan' ]

            y_ticks: [1.0e+3, 1.0e+5, 1.0e+7, 1.0e+9, 1.0e+11]

            bar_cols_filter:
              mpc_type: [ 'sh' ]
            bar_pos_bias: 0.5

            x_lim: [-0.5399999999999999, 2.54]


  mnist:
    experiments:
      train_3pc: "*"
      train_3pc_wan: "*"

    extractors:
      $INCLUDE_STEPS$: [{config: train, pipeline: compare_relatedwork_linear}]
    transformers:
      - $INCLUDE_STEPS$: {config: train, pipeline: compare_relatedwork_linear}


    loaders:
      PickleSummaryLoader: { }
      BarPlotLoader:

        subplots:
          rows: ["$metrics$", "network_type"]
          cols: ["mpc.script_args.dataset"]

          share_y: none

        cols_values_filter:
          mpc.script_name: [ 'training' ]
          suite_name: [ train_3pc ]
          'consistency_args.type': ['pc' , 'sha3s', 'cerebro']

          network_type: [ 'lan' ]
          host_idx: [ 0 ]
          mpc_type: [ 'sh', 'mal' ]
          'mpc.script_args.dataset': [ mnist_full ]
          'mpc.domain': [ 'ring' ]


        plot_cols: [ 'suite_name', 'mpc.script_name', 'host_idx', 'mpc.domain', 'network_type', 'mpc.script_args.dataset' ]

        group_cols: [  'consistency_args.type' ]

        bar_cols: [ 'mpc_type' ]


        group_labels:
          cols: ['consistency_args.type']
          format: "{}"

        show_debug_info: False

        figure_size: [2.5, 1.8]
        bar_width: 1 # 1.2


        legend_fig:
          format: "{} {}"
          cols: [ 'mpc_type', "$bar_part_col$" ]
          kwargs: {loc: "upper center", ncol: 2, bbox_to_anchor: [0.51, 0.075], columnspacing: 3.5,  fancybox: True}


        title:
          format: "{}"
          plot_cols: [ 'mpc.script_args.dataset' ]

        bar_styles:
          - style: {label: ~, edgecolor: black}
            filter: {"consistency_args.type": ["pc"]}
          - style: {color: "#f7e1d3", edgecolor: grey, label: ~}
            filter: { "$bar_part_col$": [storage_train] }
          - style: {color: "#e67e22", edgecolor: grey}
            filter: { "mpc_type": ["sh"], "$bar_part_col$": [mpc_time_s, global_data_sent_bytes] }
          - style: {color: "#f5cba7", edgecolor: grey}
            filter: { "mpc_type": ["sh"], "$bar_part_col$": [auditing_overhead_s, auditing_overhead_bytes] }
          - style: {color: "#8e44ad", edgecolor: grey}
            filter: { "mpc_type": ["mal"], "$bar_part_col$": [mpc_time_s, global_data_sent_bytes] }
          - style: {color: "#d7bde2", edgecolor: grey}
            filter: { "mpc_type": ["mal"], "$bar_part_col$": [auditing_overhead_s, auditing_overhead_bytes] }


        labels:
          mpc_time_s: ""
          global_data_sent_bytes: ""
          auditing_overhead_s: "(Overhead)"
          auditing_overhead_bytes: "(Overhead)"
          n_rounds: ""

          ring: "Ring"
          ring_split: "Ring"
          custom_256: "Field"

          adult: "Adult"
          mnist_full: "MNIST"
          cifar_alexnet: "Cifar10"

          pc: "$\\bf{Ours}$"
          cerebro: "PED"
          sha3: "SHA3"
          sha3s: "SHA3"


          sh: "SH"
          mal: "MAL"

        metrics:
          lan_time_all:
            bar_part_cols: [ mpc_time_s, auditing_overhead_s ]
            y_unit_divider: 60.0
            y_label: "Time [min]"
            y_label_pad: 14
            plot_cols_filter:
              network_type: [ 'lan' ]

            y_lim_row: [ [0, 3500] ]
            n_y_ticks: 5



          wan_bandwidth:
            bar_part_cols: [ global_data_sent_bytes, auditing_overhead_bytes ]
            y_label: "Bandwidth [TB]"
            y_label_pad: 11
            y_unit_multiplicator: 1.0e-12
            plot_cols_filter:
              network_type: [ 'lan' ]

            y_lim_row: [ [0, 140] ]
            n_y_ticks: 5


          storage:
            bar_part_cols: [ storage_train ]
            y_label: "Storage [Bytes]"

            log_y: True

            plot_cols_filter:
              network_type: [ 'lan' ]



            y_ticks: [1.0e+3, 1.0e+5, 1.0e+7, 1.0e+9, 1.0e+11]
            bar_cols_filter:
              mpc_type: [ 'sh' ]
            bar_pos_bias: 0.5

            x_lim: [-0.5399999999999999, 2.54]
#
  table:
    experiments:
      train_3pc: "*"
      train_3pc_wan: "*"
      train_3pc_bert: "*"
      train_3pc_bert_wan: "*"

    extractors:
      MpSpdzResultExtractor: { }
      MpSpdzStderrExtractor:
        file_regex:
          - ^stderr\.log$
          - ^cerebro_input_stderr\.log$
          - ^cerebro_output_stderr\.log$
          - ^sha3_input_stderr\.log$
          - ^sha3_output_stderr\.log$
      ConsistencyExtractor: { }
      IgnoreExtractor:
        file_regex:
          - ^stdout\.log$
          - ^cerebro_input_stdout\.log$
          - ^cerebro_output_stdout\.log$
          - ^sha3_input_stdout\.log$
          - ^sha3_output_stdout\.log$
    transformers:
      - df.replace: { to_replace: "^adult_[a-zA-Z0-9]*", value: "adult", regex: True }
      - df.replace: { to_replace: "^mnist_full_[a-zA-Z0-9]*", value: "mnist_full", regex: True }
      - df.replace: { to_replace: "^cifar_alexnet_[a-zA-Z0-9]*", value: "cifar_alexnet", regex: True }
      - df.replace: { to_replace: "^glue-qnli", value: "glue_qnli_bert", regex: True }

      - name: MPCTypeFixTransformer

      - name: TimerBandwidthAggregator
      - name: ComputationMultiplierTransformer
        n_epochs:
          adult: 10
          mnist_full: 20
          cifar_alexnet: 40
          glue_qnli_bert: 1

      - name: CerebroMultiplierTransformer
      - name: Sha3MultiplierTransformer

      - name: StatTransformer
        groupby_columns: [ suite_name, exp_name, run, host_idx, 'mpc.script_name', 'mpc.domain', 'mpc.script_args.dataset', 'mpc_type', 'network_type', 'consistency_args.type' ]
        stats:
          mpc_time_s: [ "spdz_timer_99", "spdz_timer_1102" ]

          auditing_overhead_s: [ "consistency_convert_shares_share_switch_output_mus",
                                 "consistency_poly_commit_commit_mus",
                                 "consistency_poly_commit_sign_mus",
                                 "consistency_poly_commit_sign_sk_mus",
                                 "consistency_convert_shares_share_switch_input_mus",
                                 "consistency_poly_eval_poly_eval_mus",
                                 "consistency_prove_verify_Prove Verify_mus",

                                 "spdz_timer_98",
                                 "spdz_timer_97",

                                 "cerebro_input_spdz_timer_95",
                                 "cerebro_output_spdz_timer_95",
                                 "consistency_cerebro_verify_Exponentiate_mus",

                                 "sha3_input_spdz_timer_98",
                                 "sha3_output_spdz_timer_97",
          ]

          auditing_overhead_bytes: [ "consistency_convert_shares_share_switch_output_global_bytes",
                                     "consistency_poly_commit_commit_global_bytes",
                                     "consistency_poly_commit_sign_global_bytes",
                                     "consistency_poly_commit_sign_sk_global_bytes",
                                     "consistency_convert_shares_share_switch_input_global_bytes",
                                     "consistency_poly_eval_poly_eval_global_bytes",
                                     "consistency_prove_verify_global_bytes",

                                     "spdz_timer_bw_98",
                                     "spdz_timer_bw_97",

                                     "cerebro_input_spdz_timer_bw_95",
                                     "cerebro_output_spdz_timer_bw_95",

                                     "sha3_input_spdz_timer_bw_98",
                                     "sha3_output_spdz_timer_bw_97"
          ]

          global_data_sent_bytes: [ "spdz_timer_bw_99", "spdz_timer_bw_1102" ]

          n_rounds: [ "spdz_player_round_number" ]

          share_convert_time_s: [ "consistency_convert_shares_share_switch_output_mus" ]
          share_convert_global_bytes: [ "consistency_convert_shares_share_switch_output_global_bytes" ]

          poly_commit_time_s: [ "consistency_poly_commit_commit_mus" ]
          poly_commit_global_bytes: [ "consistency_poly_commit_commit_global_bytes" ]

          sign_time_s: [ "consistency_poly_commit_sign_mus" ]
          sign_global_bytes: [ "consistency_poly_commit_sign_global_bytes" ]

          sign_sk_time_s: [ "consistency_poly_commit_sign_sk_mus" ]
          sign_sk_global_bytes: [ "consistency_poly_commit_sign_sk_global_bytes" ]


    loaders:
      CsvSummaryLoader: { }
      PickleSummaryLoader: { }
      FilteredTableLoader:

        plot_cols: [ 'suite_name', 'mpc.script_name', 'host_idx', 'mpc.domain', 'network_type', 'mpc.script_args.dataset' ]

        group_cols: [  'consistency_args.type' ]

        bar_cols: [ 'mpc_type' ]

        cols_values_filter:
          mpc.script_name: [ 'training' ]
          suite_name: [ train_3pc]
          'consistency_args.type': ['pc' , 'sha3s', 'cerebro']

          network_type: [ 'lan' ]
          host_idx: [ 0 ]
          mpc_type: [ 'sh', 'mal' ]
          'mpc.script_args.dataset': [ adult, mnist_full]
          'mpc.domain': [ 'ring' ]

        metrics:
          lan_time_all:
            bar_part_cols: [ mpc_time_s, auditing_overhead_s ]
            y_unit_divider: 1.0
            y_label: "Time [s]"

