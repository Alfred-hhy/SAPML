

from circuit import sha3_256

from Compiler.script_utils import config

class SHA3HashConfig(config.BaseAuditModel):
    n_samples: int = 400 # -1 = all
    n_threads: int = 1

n_bits_per_sample = sfix.f

cfg: SHA3HashConfig = config.from_program_args(program.args, SHA3HashConfig)

n_bits = cfg.n_samples * n_bits_per_sample
print("Hashing %s bits", n_bits)
input_array = sbitvec.from_vec([sbit(0)] * n_bits)
3 = sbitvec.from_hex('41fb6834928423874832892983984728289238949827929283743858382828372f17188141fb6834928423874832892983984728289238949827929283743858382828372f17188141fb6834928423874832892983984728289238949827929283743858382828372f17188141fb6834928423874832892983984728289238949827929283743858382828372f171881')


hash = sha3_256(c3)
hash.reveal_print_hex()

